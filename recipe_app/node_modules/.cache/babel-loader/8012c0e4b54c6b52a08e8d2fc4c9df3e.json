{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Abhishek\\\\Documents\\\\GitHub\\\\recipe_app\\\\recipe_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from './Recipe';\nimport './App.css';\n\nrequire('dotenv').config();\n\nfunction App() {\n  _s();\n\n  const API_ID = process.env.REACT_APP_API_ID;\n  const API_KEY = process.env.REACT_APP_API_KEY;\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(['']);\n  useEffect(() => {\n    getRecipes();\n  }, []);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=chicken&app_id=${API_ID}&app_key=${API_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"search-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-bar\",\n        type: \"text\",\n        value: search,\n        onChange: updateSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        type: \"search\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), recipes.map(recipe => /*#__PURE__*/_jsxDEV(Recipe, {\n      title: recipe.recipe.label,\n      calories: recipe.recipe.calories,\n      image: recipe.recipe.image\n    }, recipe.recipe.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ldI/OHSYgRbZAjSOAT4/YOVs6WY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Abhishek/Documents/GitHub/recipe_app/recipe_app/src/App.js"],"names":["React","useEffect","useState","Recipe","require","config","App","API_ID","process","env","REACT_APP_API_ID","API_KEY","REACT_APP_API_KEY","recipes","setRecipes","search","setSearch","getRecipes","response","fetch","data","json","hits","updateSearch","e","target","value","map","recipe","label","calories","image"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAA3B;AACA,QAAMC,OAAO,GAAGH,OAAO,CAACC,GAAR,CAAYG,iBAA5B;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAC,EAAD,CAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZgB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,YAAU;AAC3B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kDAAiDZ,MAAO,YAAWI,OAAQ,EAA7E,CAA5B;AACA,UAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAP,IAAAA,UAAU,CAACM,IAAI,CAACE,IAAN,CAAV;AACD,GAJD;;AAMA,QAAMC,YAAY,GAAGC,CAAC,IAAG;AACvBR,IAAAA,SAAS,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AAED,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,IAAI,EAAC,MAAnC;AAA0C,QAAA,KAAK,EAAEX,MAAjD;AAAyD,QAAA,QAAQ,EAAEQ;AAAnE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAOGV,OAAO,CAACc,GAAR,CAAYC,MAAM,iBACjB,QAAC,MAAD;AAEE,MAAA,KAAK,EAAEA,MAAM,CAACA,MAAP,CAAcC,KAFvB;AAGE,MAAA,QAAQ,EAAED,MAAM,CAACA,MAAP,CAAcE,QAH1B;AAIE,MAAA,KAAK,EAAEF,MAAM,CAACA,MAAP,CAAcG;AAJvB,OACOH,MAAM,CAACA,MAAP,CAAcC,KADrB;AAAA;AAAA;AAAA;AAAA,YADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAvCQvB,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport Recipe from './Recipe';\nimport './App.css';\nrequire('dotenv').config(); \n\nfunction App() {\n  const API_ID = process.env.REACT_APP_API_ID;\n  const API_KEY = process.env.REACT_APP_API_KEY;\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(['']);\n\n  useEffect(()=>{\n    getRecipes();\n  }, []);\n\n  const getRecipes = async() =>{\n    const response = await fetch(`https://api.edamam.com/search?q=chicken&app_id=${API_ID}&app_key=${API_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  }\n\n  const updateSearch = e =>{\n    setSearch(e.target.value);\n\n  }\n\n  return (\n    <div className=\"App\">\n      <form className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch}></input>\n        <button className=\"search-button\" type=\"search\">\n          Search\n        </button>\n      </form>\n      {recipes.map(recipe =>(\n        <Recipe \n          key={recipe.recipe.label}\n          title={recipe.recipe.label}\n          calories={recipe.recipe.calories} \n          image={recipe.recipe.image}/>\n      ))};\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}